// Quick test for debug - Test RBAC step by step\nconsole.log('=== RBAC QUICK TEST ===');\n\n// Test case: simple object with basic patterns\nconst testData = {\n    _id: \"123\",\n    name: \"John Doe\",\n    email: \"john@example.com\",\n    profile: {\n        avatar: \"avatar.jpg\",\n        age: 30\n    },\n    secret: \"should-be-removed\"\n};\n\nconst patterns = [\"_id\", \"name\", \"profile.avatar\"];\n\nconsole.log('Input data:', JSON.stringify(testData, null, 2));\nconsole.log('Patterns:', patterns);\n\ntry {\n    // Direct implementation to test without imports\n    const result = {};\n    \n    // Simulate what should happen:\n    // Pattern 1: \"_id\" -> result._id = testData._id\n    if ('_id' in testData) {\n        result._id = testData._id;\n        console.log('✅ Added _id:', result._id);\n    }\n    \n    // Pattern 2: \"name\" -> result.name = testData.name  \n    if ('name' in testData) {\n        result.name = testData.name;\n        console.log('✅ Added name:', result.name);\n    }\n    \n    // Pattern 3: \"profile.avatar\" -> result.profile.avatar = testData.profile.avatar\n    if ('profile' in testData && testData.profile && 'avatar' in testData.profile) {\n        if (!result.profile) result.profile = {};\n        result.profile.avatar = testData.profile.avatar;\n        console.log('✅ Added profile.avatar:', result.profile.avatar);\n    }\n    \n    console.log('\\n--- Expected Result ---');\n    console.log(JSON.stringify(result, null, 2));\n    \n    console.log('\\n--- Should NOT have ---');\n    console.log('email:', 'email' in result ? '❌ FOUND' : '✅ NOT FOUND');\n    console.log('secret:', 'secret' in result ? '❌ FOUND' : '✅ NOT FOUND');\n    console.log('profile.age:', result.profile && 'age' in result.profile ? '❌ FOUND' : '✅ NOT FOUND');\n    \n} catch (error) {\n    console.error('❌ Error:', error);\n}\n\nconsole.log('\\n=== Test Complete ===');